version: '3.7'
services:

  redisinsight:
    image: redislabs/redisinsight
    ports:
      - "8001:8001"
    networks:
      - redis-microservices-network
    depends_on:
      - app-redis

  app-redis:
    build:
      context: ./redis-server
      dockerfile: Dockerfile
    image: public.ecr.aws/i9l0l1r7/aws-workshop/app-redis
    ports:
      - "6379:6379"
    networks:
      - redis-microservices-network

  app-mysql:
    build:
      context: ./mysql-database
      dockerfile: Dockerfile
    image: public.ecr.aws/i9l0l1r7/aws-workshop/app-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    networks:
      - redis-microservices-network

  app-db-to-streams:
    build:
      context: ./db-to-streams-service
      dockerfile: Dockerfile
    image: public.ecr.aws/i9l0l1r7/aws-workshop/app-db-to-streams
    ports:
      - "8082:8082"
    environment:
      - REDIS_HOST=app-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    networks:
      - redis-microservices-network
    depends_on:
      - app-mysql
      - app-redis

  app-streams-to-redisgraph:
    build:
      context: ./streams-to-redisgraph-service
      dockerfile: Dockerfile
    image: public.ecr.aws/i9l0l1r7/aws-workshop/app-streams-to-graph
    ports:
      - "8083:8083"
    environment:
      - REDIS_HOST=app-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    networks:
      - redis-microservices-network
    depends_on:
      - app-mysql
      - app-redis

  app-sql-rest-api:
    build:
      context: ./sql-rest-api
      dockerfile: Dockerfile
    image: public.ecr.aws/i9l0l1r7/aws-workshop/app-sql-rest-api
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://app-mysql:3306/inventory
      - SPRING_DATASOURCE_USERNAME=mysqluser
      - SPRING_DATASOURCE_PASSWORD=mysqlpw
    networks:
      - redis-microservices-network
    depends_on:
      - app-mysql
    restart: always

  app-caching:
    build:
      context: ./caching-service
      dockerfile: Dockerfile
    image: public.ecr.aws/i9l0l1r7/aws-workshop/app-caching
    ports:
      - "8084:8084"
    environment:
      - REDIS_HOST=app-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    networks:
      - redis-microservices-network
    depends_on:
      - app-mysql
      - app-redis
    restart: always

  app-streams-to-redis-hashes:
    build:
      context: ./streams-to-redisearch-service
      dockerfile: Dockerfile
    image: public.ecr.aws/i9l0l1r7/aws-workshop/app-streams-to-redis-hashes
    ports:
      - "8085:8085"
    environment:
      - REDIS_HOST=app-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    networks:
      - redis-microservices-network
    depends_on:
      - app-redis
    restart: always

  app-comments:
    build:
      context: ./comments-service
      dockerfile: Dockerfile
    image: public.ecr.aws/i9l0l1r7/aws-workshop/app-comments
    ports:
      - "8086:8086"
    environment:
      - REDIS_HOST=app-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    networks:
      - redis-microservices-network
    depends_on:
      - app-redis
    restart: always

  # ws-notifications-service:
  #     build:
  #       context: ./notifications-service-node
  #       dockerfile: Dockerfile
  #     ports:
  #       - "8888:8888"
  #     environment:
  #       - REDIS_HOST=app-redis
  #       - REDIS_PORT=6379
  #       - REDIS_PASSWORD=
  #     networks:
  #       - redis-microservices-network
  #     depends_on:
  #       - app-redis
  #     restart: always
      
  app-frontend:
    build:
      context: ./ui-redis-front-end/redis-front
      dockerfile: Dockerfile
    image: public.ecr.aws/i9l0l1r7/aws-workshop/app-frontend
    ports:
      - "80:80"
    networks:
      - redis-microservices-network
    depends_on:
      - app-redis
      - app-mysql
      - app-streams-to-redisgraph
      - app-streams-to-redis-hashes
      - app-db-to-streams
      - app-caching
      - app-sql-rest-api
    restart: always

networks:
  redis-microservices-network:
