version: '3.7'
services:

  redis-service:
    image: redislabs/redismod
    ports:
      - "6379:6379"
    networks:
      - redis-microservices-network
    restart: always

  mysql-debezium-service:
    build:
      context: ./mysql-database
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    networks:
      - redis-microservices-network
    restart: always

  cdc-to-redis-streams-service:
    build:
      context: ./data-streams-publisher
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - redis-microservices-network
    restart: always
    depends_on:
      - mysql-debezium-service
      - redis-service

  streams-to-graph-service:
    build:
      context: ./data-streams-to-graph
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    networks:
      - redis-microservices-network
    restart: always
    depends_on:
      - mysql-debezium-service
      - redis-service

  sql-legacy-service:
    build:
      context: ./sql-data-generator
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - redis-microservices-network
    depends_on:
      - mysql-debezium-service
    restart: always

  cdc-to-cache-service:
    build:
      context: ./cache-invalidator-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    networks:
      - redis-microservices-network
    depends_on:
      - mysql-debezium-service
      - redis-service
    restart: always

  streams-to-autocomplete-service:
    build:
      context: ./data-streams-to-autocomplete
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    networks:
      - redis-microservices-network
    depends_on:
      - redis-service
    restart: always

#  front-end:
#    build:
#      context: ./ui-redis-front-end/redis-front
#      dockerfile: Dockerfile
#    ports:
#      - "8080:80"
#    networks:
#      - redis-microservices-network
#    depends_on:
#      - redis-service
#      - mysql-debezium-service
#      - cdc-to-redis-streams-service
#      - streams-to-autocomplete-service
#      - streams-to-graph-service
#      - cdc-to-cache-service
#      - sql-legacy-service
#    restart: always

networks:
  redis-microservices-network:
    driver: bridge